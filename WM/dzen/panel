#!/bin/bash

# Init {{{


if [ $(pgrep -cx panel) -gt 1 ] ; then
  printf "%s\n" "The panel is already running." >&2
  exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

. $(dirname $0)/common.sh


# }}}
# Fifo {{{


FIFO=/tmp/panel-fifo
[ -e "$FIFO" ] && rm "$FIFO"
mkfifo "$FIFO"
exec 3<> "$FIFO"


# }}}
# Variables {{{


NORMIFS=$IFS
FIELDIFS=':'

PANEL_HEIGHT=15
EVENTS=''

bspc config top_padding $PANEL_HEIGHT


# }}}
# Functions {{{

Mail() { # {{{
  # $PASSWORD_STORE_DIR/Gmail/Dzen contains login:password
  email=$(curl -u $(cat $PASSWORD_STORE_DIR/Gmail/Dzen) --silent 'https://mail.google.com/mail/feed/atom' | grep fullcount | egrep -o '[0-9]+')

  if [[ $email -ne 0 ]]; then
    printf "^ca(1,firefox 'https://mail.google.com/')$(Icon mail '#444444')$email ^ca()"
  fi
}

# }}}
Menu() { # {{{
  printf "^ca(1,$(Script menu.sh)) $(Icon arch '#0087af')  ^ca()"
}

# }}}
Pacman() { # {{{
  updates=$(checkupdates | wc -l)

  if [[ $updates -ne 0 ]]; then
    printf "^ca(1,$(Script pacman.sh))%s^ca()" "$(Icon pacman '#444444')$updates"
  fi
}

# }}}
Time() { #{{{
  printf "^ca(1,$(Script date.sh))%s^ca()" "$(Icon clock '#444444')$(date +%H:%M:%S)"
}

# }}}
Volume() { #{{{
  vol=$(amixer get Master | egrep -o "[0-9]+%" | egrep -o "[0-9]*")
  mut=$(amixer get Master | egrep 'Playback.*?\[o' | egrep -o '\[o.+\]')

  # TODO: Add colors
  c1='#444444'
  c2='#303030'
  if [[ $vol -eq 0 || "$mut" = "[off]" ]]; then
    c1='#af0000'
    ico="volume0"
  elif [[ $vol -le 30 && $vol -gt 0 ]]; then
    ico="volume25"
  elif [[ $vol -le 65 && $vol -gt 30 ]]; then
    ico="volume50"
  elif [[ $vol -lt 100 && $vol -gt 65 ]]; then
    ico="volume75"
  elif [[ $vol -eq 100 ]]; then
    ico="volume100"
  fi

  printf "^ca(1,amixer set Master toggle; dzen_notify -t 1 'Changed mute state of volume')$(Icon $ico $c1)^ca()"

  for i in {0..10}; do
    percent="$(( $i * 10 ))"
    if [[ $vol -ge $percent ]]; then
      printf "^ca(1,amixer set Master %s)^fg(%s)^r(8x3)^fg()^ca()" "$percent%; dzen_notify -t 1 'Volume changed to $percent%'" "$c1"
    else
      printf "^ca(1,amixer set Master %s)^fg(%s)^r(8x3)^fg()^ca()" "$percent%; dzen_notify -t 1 'Volume changed to $percent%'" "$c2"
    fi
  done
}

# }}}

# }}}

# Updating {{{


bspc control --subscribe >&3 &
xtitle -sf 'T%s' >&3 &
while :; do echo "S$(Align right -210; Volume) $(Align right -85;  Time)" >&3; sleep 3;   done &
while :; do echo "L$(Align right -310; Pacman) $(Align right -260; Mail)" >&3; sleep 300; done &


# }}}
# Printing {{{

while read -r line <&3; do
  case $line in
    L*) LONG="${line#?}"  ;;
    S*) SHORT="${line#?}" ;;
    T*) TITLE="${line#?}" ;;
    W*)
      # bspwm internal state
      DESK="$(Align center -115)"
      IFS=$FIELDIFS
      set -- ${line#?}

      while [ $# -gt 0 ] ; do
        item=$1
        name=${item#?}
        icon=$name

        case $item in
          [OoFfUu]*)
            case $item in
              O*) # Focused ocupied desktop
                FG='#9e9e9e'
                [[ "$name" = [0-9] ]] && icon="•"
                ;;
              F*) # Focused free desktop
                FG='#9e9e9e'
                [[ "$name" = [0-9] ]] && icon="○"
                ;;
              o*) # Occupied desktop
                FG='#0087af'
                [[ "$name" = [0-9] ]] && icon="•"
                ;;
              f*) # Free desktop
                FG='#444444'
                [[ "$name" = [0-9] ]] && icon="○"
                ;;
              [uU]*) # Urgent desktop
                FG='#af8700'
                [[ "$name" = [0-9] ]] && icon="•"
                ;;
            esac

            DESK="${DESK}^fg($FG)^ca(1, bspc desktop -f ${name})^ca(2, bspc window -d ${name}) ${icon} ^ca()^ca()^fg()"
            ;;
        esac
        shift
      done
      IFS=$NORMIFS
      ;;
  esac

  echo "$(Align left; Menu) $TITLE $DESK $LONG $SHORT"
done | dzen2 -h "$PANEL_HEIGHT" -ta l -e "$EVENTS" &

# }}}

wait
