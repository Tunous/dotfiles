#!/bin/bash
#
# dmenu-web
# Open URL or search the web
# URL encode function and search links taken from:
# http://www.if-not-true-then-false.com/2009/google-search-from-linux-and-unix-command-line/
#

urlencode() {
    echo -n $@ | perl -pe 's/([^-_.~A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg'
}

link="https://duckduckgo.com/?q="

# Parse options to get correct link
parse_options() {
    case $1 in
        -a|--amazon )
            link="http://www.amazon.com/s/ref=nb_ss?url=search-alias%3Daps&field-keywords="
            shift ;;
        -b|--bing )
            link="https://www.bing.com/search?q="
            shift ;;
        -d|--duckduckgo )
            link="https://duckduckgo.com/?q="
            shift ;;
        -g|--google )
            link="https://www.google.com/search?q="
            shift ;;
        -w|--wiki )
            link="https://en.wikipedia.org/w/index.php?title=Special%3ASearch&redirs=0&fulltext=Search&ns0=1&search="
            shift ;;
        -y|--yahoo )
            link="https://search.yahoo.com/search?p="
            shift ;;
    esac
    search="$@"
}

parse_options $@
# If no arguments given, then use dmenu to read them
if [[ -z "$search" ]]; then
    search="$(dmenu-get --no-input 'Search-web')"

    parse_options $search

    if [[ -z "$search" ]]; then
        echo "Cancelled search"
        exit
    fi
fi

url_regex='(https?://)?[^ ]*[.][^ ]+'
if [[ $search =~ $url_regex ]]; then
    # It's link
    firefox $search &
else
    # It's search term
    search=$(urlencode $search)
    firefox $link$search &
fi
