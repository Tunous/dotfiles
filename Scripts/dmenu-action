#!/bin/python

import subprocess
from sys import argv
from os import environ

def dGet(prompt, usr_input="", color="#0087af"):
    """Get selected option from user using dmenu"""

    command = [
        "dmenu",
        "-b", "-i",
        "-nf", "#9e9e9e",
        "-nb", "#000000",
        "-sf", '#000000',
        "-sb", color,
        "-p", prompt
    ]

    try:
        return subprocess.check_output(command, input=usr_input).decode("utf-8").rstrip()
    except subprocess.CalledProcessError:
        # Nothing selected. We can stop this script.
        raise SystemExit

def get(choice=""):
    if not choice:
        choice = dGet("Select action", b"Run\nWeb\nPassword\nScreenshot\nSystem").lower()

    if choice == "run":
        run()
    elif choice == "web":
        web()
    elif choice == "screenshot":
        screen()
    elif choice == "system":
        system()
    elif choice == "password":
        password()

def run():
    """Run program from $PATH"""

    apps = subprocess.check_output(["dmenu_path"])
    prog = dGet("Run application", apps).split()

    # Terminal applications
    if prog in ["ranger", "htop", "vim"]:
        subprocess.Popen(["urxvt", "-e", prog])

    else:
        subprocess.Popen(prog)

def web():
    """Open url or search in google using dwb"""

    option = dGet("Open url/Search web")
    if option.startswith('f '):
        option = option[2:]
        subprocess.Popen(["firefox", option])
    else:
        subprocess.Popen(["dwb", option])

def screen():
    choice = dGet("Take screenshot", b"Fullscreen\nDelayed fullscreen\nSection", "#d75f00").lower()

    if choice == "delayed fullscreen":
        delay = 5
    else:
        delay = 1

    directory = environ["HOME"] + "/usr/Dropbox/Images"
    subprocess.call(["mkdir", "-p", directory])

    if choice == "section":
        subprocess.call(["scrot", "-s", "-e mv $f " + directory])
        subprocess.call(["notify", "Taken a screenshot of selected section"])
    else:
        subprocess.call(["scrot", "-d", str(delay), "-e mv $f " + directory])
        subprocess.call(["notify", "Taken a fullscreen screenshot"])

def system():
    """Preform system command"""

    action = dGet("Select action", b"Poweroff\nReboot\nLogout", "#af0000").lower()

    if action in ["poweroff", "reboot"]:
        subprocess.call(["systemctl", action])
    elif action == "logout":
        subprocess.call(["pkill", "panel"])
        subprocess.call(["bspc", "quit"])

def password():
    """Autotype selected password into focused window"""

    command = "find " + environ["PASSWORD_STORE_DIR"] + " -name *gpg -print | sed \"s," + environ["PASSWORD_STORE_DIR"] + "/,,;s,.gpg$,,\" | sort"
    passwords = subprocess.check_output(command, shell=True)

    choice = dGet("Select password", passwords, "#af8700")
    info = subprocess.check_output(["pass", choice])
    password = subprocess.check_output(["head", "-n 1"], input=info).decode("utf-8").rstrip()
    username = subprocess.check_output("grep '^username: ' | cut -c 11-", input=info, shell=True).decode("utf-8").rstrip()

    if password:
        if username:
            subprocess.call(["xdotool", "type", username])
            subprocess.call(["xdotool", "key", "Tab"])

        subprocess.call(["xdotool", "type", password])
        if username:
            subprocess.call(["xdotool", "key", "Return"])

try:
    arg = argv[1]
except IndexError:
    arg = ""

get(arg)
